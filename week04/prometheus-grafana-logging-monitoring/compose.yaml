networks:
  app_network:
    driver: bridge
  monitoring:
    driver: bridge

services:
  web:
    build: ./frontend
    ports:
      - 5173:5173
    environment:
      - VITE_API_URL=http://34.143.177.22:5000
    depends_on:
      - api
    networks:
      - app_network

  api:
    build: ./backend
    ports:
      - 5000:5000
    environment:
      - DB_URI=mongodb+srv://trannghiach2:smFs9Kju3AcM6OWm@weathergamecluster.i1tew.mongodb.net/weather-game
      - REACT_URL=http://34.143.177.22:5173
    depends_on:
      - db
    networks:
      - app_network
      - monitoring

  db:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes: 
      - weather-game:/data/db
    networks:
      - app_network
  
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    volumes:
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 3100:3100
    networks:
      - monitoring


  promtail: 
    image: grafana/promtail:latest
    restart: unless-stopped
    volumes:
      - ./promtail.yaml:/etc/promtail/promtail.yaml
      - /var/log:/var/log #Read logs from the system
      - /var/run/docker.sock:/var/run/docker.sock #Read logs from the container docker
    command: -config.file=/etc/promtail/promtail.yaml
    networks:
      - monitoring
    
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitoring

volumes:
  weather-game:
  grafana-data:
  loki-data:
  prometheus-data:
